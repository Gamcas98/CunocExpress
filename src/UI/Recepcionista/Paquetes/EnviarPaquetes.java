/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Recepcionista.Paquetes;

import Models.Cliente;
import Models.Paquete;
import Models.PuntoDeControl;
import SQL.ManejoTabla;
import SQL.ObtenerDatos;
import SQL.RegistroCliente;
import SQL.RegistroPaquete;
import SQL.RegistroRuta;
import java.sql.Date;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gamcas
 */
public class EnviarPaquetes extends javax.swing.JPanel {

    public static int TODOS_LOS_DESTINO = 7;
    public static int BUSCAR_DESTINO = 8;
    private Cliente cliente;
    private RegistroCliente registroCliente;
    private LocalDate hoy = LocalDate.now();

    public EnviarPaquetes() {
        initComponents();
        btnCrearCliente.setVisible(false);
        mostrarTablas();
        existeTarifa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorInfo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtNit = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCrearCliente = new javax.swing.JButton();
        asignarPuntosControl = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTarifaPorLibra = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTarifaPriorizacion = new javax.swing.JTextField();
        btnAsignar = new javax.swing.JButton();
        errorAsignar = new javax.swing.JLabel();
        txtTarifaDestino = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        chkPriorizar = new javax.swing.JCheckBox();
        txtDestino = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        contenedorTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPaquetes = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnCrear = new javax.swing.JButton();
        txtTotal = new javax.swing.JLabel();
        contenedorAyuda = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabalaDestino = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        txtBuscarDestino = new javax.swing.JTextField();
        contenedorInfo1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        contenedorInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        contenedorInfo.setLayout(null);

        jLabel5.setText("Nit");
        contenedorInfo.add(jLabel5);
        jLabel5.setBounds(20, 40, 130, 40);

        txtNit.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtNit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNit.setEnabled(false);
        contenedorInfo.add(txtNit);
        txtNit.setBounds(20, 80, 200, 50);

        txtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombre.setEnabled(false);
        contenedorInfo.add(txtNombre);
        txtNombre.setBounds(330, 80, 200, 50);

        jLabel7.setText("Nombre");
        contenedorInfo.add(jLabel7);
        jLabel7.setBounds(330, 40, 130, 40);

        txtDireccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDireccion.setEnabled(false);
        contenedorInfo.add(txtDireccion);
        txtDireccion.setBounds(20, 180, 200, 50);

        jLabel8.setText("Direccion");
        contenedorInfo.add(jLabel8);
        jLabel8.setBounds(20, 140, 130, 40);

        txtTelefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTelefono.setEnabled(false);
        contenedorInfo.add(txtTelefono);
        txtTelefono.setBounds(330, 180, 200, 50);

        jLabel16.setText("Telefono");
        contenedorInfo.add(jLabel16);
        jLabel16.setBounds(330, 140, 130, 40);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Datos del Cliente");
        contenedorInfo.add(jLabel1);
        jLabel1.setBounds(190, 0, 140, 50);

        btnCrearCliente.setText("Crear");
        btnCrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearClienteActionPerformed(evt);
            }
        });
        contenedorInfo.add(btnCrearCliente);
        btnCrearCliente.setBounds(220, 210, 110, 50);

        add(contenedorInfo);
        contenedorInfo.setBounds(40, 210, 540, 280);

        asignarPuntosControl.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        asignarPuntosControl.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("Registro Paquetes");
        asignarPuntosControl.add(jLabel9);
        jLabel9.setBounds(300, 20, 240, 70);

        jLabel12.setText("Peso (En Libras)");
        asignarPuntosControl.add(jLabel12);
        jLabel12.setBounds(50, 100, 110, 40);

        txtPeso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        asignarPuntosControl.add(txtPeso);
        txtPeso.setBounds(50, 140, 200, 50);

        jLabel11.setText("Tarifa por Libra");
        asignarPuntosControl.add(jLabel11);
        jLabel11.setBounds(50, 200, 120, 40);

        txtTarifaPorLibra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTarifaPorLibra.setEnabled(false);
        asignarPuntosControl.add(txtTarifaPorLibra);
        txtTarifaPorLibra.setBounds(50, 230, 200, 50);

        jLabel10.setText("Tarifa de Priorizacion");
        asignarPuntosControl.add(jLabel10);
        jLabel10.setBounds(330, 200, 130, 40);

        txtTarifaPriorizacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTarifaPriorizacion.setText("0");
        txtTarifaPriorizacion.setEnabled(false);
        asignarPuntosControl.add(txtTarifaPriorizacion);
        txtTarifaPriorizacion.setBounds(330, 230, 200, 50);

        btnAsignar.setText("Registrar Paquete");
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });
        asignarPuntosControl.add(btnAsignar);
        btnAsignar.setBounds(580, 230, 180, 100);

        errorAsignar.setBackground(new java.awt.Color(255, 0, 0));
        errorAsignar.setForeground(new java.awt.Color(255, 0, 0));
        asignarPuntosControl.add(errorAsignar);
        errorAsignar.setBounds(280, 330, 310, 50);

        txtTarifaDestino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTarifaDestino.setEnabled(false);
        asignarPuntosControl.add(txtTarifaDestino);
        txtTarifaDestino.setBounds(570, 140, 200, 50);

        jLabel17.setText("Tarifa de Destino");
        asignarPuntosControl.add(jLabel17);
        jLabel17.setBounds(570, 100, 130, 40);

        chkPriorizar.setText("Priorizar");
        chkPriorizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkPriorizarMouseClicked(evt);
            }
        });
        asignarPuntosControl.add(chkPriorizar);
        chkPriorizar.setBounds(380, 300, 96, 24);

        txtDestino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDestino.setEnabled(false);
        asignarPuntosControl.add(txtDestino);
        txtDestino.setBounds(330, 140, 200, 50);

        jLabel19.setText("Destino");
        asignarPuntosControl.add(jLabel19);
        jLabel19.setBounds(330, 100, 130, 40);

        add(asignarPuntosControl);
        asignarPuntosControl.setBounds(630, 10, 830, 400);

        contenedorTabla.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        contenedorTabla.setLayout(null);

        tablaPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nit", "Destino", "Tarifa de Destino", "No. Paquete", "Peso", "Tarifa Por Libra", "Tarida de Prioridad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPaquetes.setToolTipText("");
        tablaPaquetes.setEnabled(false);
        jScrollPane1.setViewportView(tablaPaquetes);

        contenedorTabla.add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 810, 360);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Factura");
        contenedorTabla.add(jLabel13);
        jLabel13.setBounds(360, 10, 80, 50);

        jLabel18.setText("Total a Pagar:");
        contenedorTabla.add(jLabel18);
        jLabel18.setBounds(50, 450, 80, 50);

        btnCrear.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnCrear.setText("Enviar");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        contenedorTabla.add(btnCrear);
        btnCrear.setBounds(570, 440, 150, 60);
        contenedorTabla.add(txtTotal);
        txtTotal.setBounds(140, 450, 130, 50);

        add(contenedorTabla);
        contenedorTabla.setBounds(630, 400, 830, 530);

        contenedorAyuda.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        contenedorAyuda.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setText("Seleccione el Destino");
        contenedorAyuda.add(jLabel14);
        jLabel14.setBounds(160, 0, 200, 50);

        tabalaDestino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabalaDestino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabalaDestinoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabalaDestino);

        contenedorAyuda.add(jScrollPane3);
        jScrollPane3.setBounds(40, 60, 453, 300);

        jLabel15.setText("Buscar Destino:");
        contenedorAyuda.add(jLabel15);
        jLabel15.setBounds(140, 370, 100, 40);

        txtBuscarDestino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscarDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarDestinoKeyPressed(evt);
            }
        });
        contenedorAyuda.add(txtBuscarDestino);
        txtBuscarDestino.setBounds(240, 370, 260, 40);

        add(contenedorAyuda);
        contenedorAyuda.setBounds(40, 490, 540, 440);

        contenedorInfo1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        contenedorInfo1.setLayout(null);

        jLabel6.setText("Buscar Cliente");
        contenedorInfo1.add(jLabel6);
        jLabel6.setBounds(210, 10, 130, 40);

        txtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        contenedorInfo1.add(txtCliente);
        txtCliente.setBounds(160, 50, 200, 50);

        btnBuscar.setText("Buscar Cliente");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        contenedorInfo1.add(btnBuscar);
        btnBuscar.setBounds(200, 120, 120, 60);

        add(contenedorInfo1);
        contenedorInfo1.setBounds(40, 0, 540, 220);
    }// </editor-fold>//GEN-END:initComponents

    private void align() {

        for (int i = 0; i < tablaPaquetes.getColumnCount(); i++) {
            DefaultTableCellRenderer Alinear = new DefaultTableCellRenderer();
            Alinear.setHorizontalAlignment(SwingConstants.CENTER);
            tablaPaquetes.getColumnModel().getColumn(i).setCellRenderer(Alinear);

        }

    }

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed

        String peso = txtPeso.getText().trim();
        String tarifaPrioridad = txtTarifaPriorizacion.getText();
        String tarifaPorLibra = txtTarifaPorLibra.getText();
        String tarfaDestino = txtTarifaDestino.getText();
        String destino = txtDestino.getText();
        String nit = txtNit.getText();
        int contTabla = tablaPaquetes.getRowCount();

        try {

            if (peso.isEmpty() || destino.isEmpty() || tarifaPorLibra.isEmpty()) {

                errorAsignar.setText("Los Campos son obligatorios");

            } else {

                if (nit.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese un cliente");
                } else {

                    if (!peso.equals("0")) {

                        double pes = Double.parseDouble(peso);

                        DefaultTableModel modelo = (DefaultTableModel) tablaPaquetes.getModel();
                        tablaPaquetes.setRowHeight(40);
                        tablaPaquetes.getTableHeader().setReorderingAllowed(false);

                        Object[] fila = new Object[7];
                        fila[0] = nit;
                        fila[1] = destino;
                        fila[2] = tarfaDestino;
                        fila[3] = contTabla + 1;
                        fila[4] = peso;
                        fila[5] = tarifaPorLibra;
                        fila[6] = tarifaPrioridad;

                        modelo.addRow(fila);

                        tablaPaquetes.setModel(modelo);
                        align();
                        limpiarRegistro();
                        calcularTotal();
                    } else {
                        errorAsignar.setText("El Peso no puede ser 0");
                    }

                }
            }
        } catch (NumberFormatException e) {
            errorAsignar.setText("El peso debe de ser un numero");
        }


    }//GEN-LAST:event_btnAsignarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

        Double total = 0.0;
        Paquete paquete;
        PuntoDeControl pcontrol;
        boolean cola;
        ArrayList<Paquete> tabla = new ArrayList<>();
        for (int filaTabla = 0; filaTabla < tablaPaquetes.getRowCount(); filaTabla++) {

            int peso = Integer.valueOf(tablaPaquetes.getValueAt(filaTabla, 4).toString());
            Double tarifaLibra = Double.valueOf(tablaPaquetes.getValueAt(filaTabla, 5).toString());
            Double totalLibra = peso * tarifaLibra;
            Double tarifaPrioridad = Double.valueOf(tablaPaquetes.getValueAt(filaTabla, 6).toString());
            Double tarifaDestino = Double.valueOf(tablaPaquetes.getValueAt(filaTabla, 2).toString());
            total = tarifaPrioridad + totalLibra + tarifaDestino;

            paquete = new Paquete();
            paquete.setIngreso(total);
            paquete.setCliente(Integer.parseInt(tablaPaquetes.getValueAt(filaTabla, 0).toString()));
            paquete.setDestino(tablaPaquetes.getValueAt(filaTabla, 1).toString());
            paquete.setTarifaDestino(Double.parseDouble(tablaPaquetes.getValueAt(filaTabla, 2).toString()));
            paquete.setPeso(Integer.parseInt(tablaPaquetes.getValueAt(filaTabla, 4).toString()));
            paquete.setTarifaLibra(Double.parseDouble(tablaPaquetes.getValueAt(filaTabla, 5).toString()));
            paquete.setTarifaPrioridad(Double.parseDouble(tablaPaquetes.getValueAt(filaTabla, 6).toString()));
            paquete.setIdPuntoControl(null);//esta variable
            paquete.setHorasInRuta(0);
            paquete.setFechaIngreso(hoy);
            paquete.setRuta(null);
            paquete.setCosto(0);
            paquete.setEstado("Bodega");

            tabla.add(paquete);
        }
        tabla = Paquete.ordenarPaquetesPrioridad(tabla);
        for (int i = 0; i < tabla.size(); i++) {
            paquete = tabla.get(i);
            if (paquete.getTarifaPrioridad() == 0) {
                cola = RegistroPaquete.buscarUbicacion(paquete.getDestino());
            } else {
                cola = RegistroPaquete.buscarPrioridad(paquete.getDestino());
            }

            if (!cola) {
                if ((pcontrol = RegistroRuta.buscarDestinos(paquete.getDestino())) != null) {
                    paquete.setIdPuntoControl(pcontrol.getId());
                    paquete.setRuta(pcontrol.getRuta());
                    paquete.setEstado("Ruta");
                }
            }
            RegistroPaquete.crearPaquete(paquete);
        }
        JOptionPane.showMessageDialog(null, "Se enviaron los paquetes con exito");
        limpiarCliente();;
        limpiarTabla();
        txtCliente.setText("");
        txtTotal.setText("");
        btnBuscar.setEnabled(true);

    }//GEN-LAST:event_btnCrearActionPerformed

    private void chkPriorizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkPriorizarMouseClicked
        if (chkPriorizar.isSelected()) {
            if (ObtenerDatos.obtenerTarifaPrioridad() == null) {
                JOptionPane.showMessageDialog(null, "No se puede priorizar el paquete"
                        + "\nporque no se ha fijado una tarifa de priorizacion");
                chkPriorizar.setSelected(false);
            } else {
                txtTarifaPriorizacion.setText(ObtenerDatos.obtenerTarifaPrioridad());
            }

        } else {
            txtTarifaPriorizacion.setText("0");
        }
    }//GEN-LAST:event_chkPriorizarMouseClicked

    private void txtBuscarDestinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarDestinoKeyPressed
        try {
            ManejoTabla.mostrarTablas(tabalaDestino, BUSCAR_DESTINO, txtBuscarDestino.getText());
        } catch (ClassNotFoundException ex) {
        }
    }//GEN-LAST:event_txtBuscarDestinoKeyPressed

    private void tabalaDestinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabalaDestinoMouseClicked
        txtDestino.setText((String) tabalaDestino.getValueAt(tabalaDestino.getSelectedRow(), 0));
        txtTarifaDestino.setText(String.valueOf(tabalaDestino.getValueAt(tabalaDestino.getSelectedRow(), 1).toString()));
    }//GEN-LAST:event_tabalaDestinoMouseClicked

    private void btnCrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearClienteActionPerformed
        registroCliente = new RegistroCliente();
        crearCliente(registroCliente);
    }//GEN-LAST:event_btnCrearClienteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        registroCliente = new RegistroCliente();
        Cliente childCliente = new Cliente();

        try {
            if (registroCliente.existeCliente(Integer.valueOf(txtCliente.getText())) == 0) {

                int confirmar = JOptionPane.showConfirmDialog(null,
                        "El cliente no existe desea registrarlo");

                if (JOptionPane.OK_OPTION == confirmar) {
                    txtNit.setText(txtCliente.getText());
                    btnBuscar.setEnabled(false);
                    habilitarCrear(true);
                }

            } else {
                childCliente = registroCliente.recuperarCliente(Integer.valueOf(txtCliente.getText()));
                txtNit.setText(String.valueOf(childCliente.getNit()));
                txtNombre.setText(childCliente.getNombre());
                txtDireccion.setText(childCliente.getDireccion());
                txtTelefono.setText(String.valueOf(childCliente.getTelefono()));
                btnBuscar.setEnabled(false);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El nit debe de ser un numero");
            txtCliente.setText("");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void crearCliente(RegistroCliente registro) {
        cliente = new Cliente();
        String nit = txtNit.getText();
        String telefono = txtTelefono.getText();
        String nombre = txtNombre.getText();
        String direccion = txtDireccion.getText();

        try {
            if (nit.isEmpty() || nombre.isEmpty() || telefono.isEmpty() || direccion.isEmpty()) {
                JOptionPane.showMessageDialog(null, "todos los datos son obligatorios");
            } else {

                cliente.setNit(Integer.valueOf(nit));
                cliente.setNombre(nombre);
                cliente.setTelefono(Integer.valueOf(telefono));
                cliente.setDireccion(direccion);

                if (registro.crearCliente(cliente)) {
                    JOptionPane.showMessageDialog(null, "Cliente creado con exito");
                    habilitarCrear(false);
                    btnBuscar.setEnabled(true);

                } else {
                    JOptionPane.showMessageDialog(null, "Oh ha ocurrido un erro");
                }

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Nit y telefono deben de ser Numeros");
            txtTelefono.setText("");
            txtNit.setText("");
        }

    }

    private void calcularTotal() {

        Double total = 0.0;

        for (int i = 0; i < tablaPaquetes.getRowCount(); i++) {

            int peso = Integer.valueOf(tablaPaquetes.getValueAt(i, 4).toString());
            Double tarifaLibra = Double.valueOf(tablaPaquetes.getValueAt(i, 5).toString());
            Double totalLibra = peso * tarifaLibra;
            Double tarifaPrioridad = Double.valueOf(tablaPaquetes.getValueAt(i, 6).toString());
            Double tarifaDestino = Double.valueOf(tablaPaquetes.getValueAt(i, 2).toString());

            double aux = 0.0;

            aux = aux + tarifaDestino + tarifaPrioridad + totalLibra;
            total = total + aux;
        }

        txtTotal.setText(String.valueOf(total));
    }

    private void habilitarCrear(boolean bol) {
        btnCrearCliente.setVisible(bol);
        txtDireccion.setEnabled(bol);
        txtTelefono.setEnabled(bol);
        txtNombre.setEnabled(bol);
        txtNit.setEnabled(bol);
    }

    private void limpiarRegistro() {
        txtPeso.setText("");
        txtDestino.setText("");
        txtTarifaDestino.setText("");
        errorAsignar.setText("");
        chkPriorizar.setSelected(false);

    }

    private void limpiarCliente() {
        txtNit.setText("");
        txtNombre.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtBuscarDestino.setText("");
    }

    private void existeTarifa() {
        if (ObtenerDatos.obtenerTarifaLibra() == null) {
            JOptionPane.showMessageDialog(null, "No hay asignada una tarifa por libra"
                    + "\nFavor de contactar a un administrador para fijar una");
        } else {
            txtTarifaPorLibra.setText(ObtenerDatos.obtenerTarifaLibra());
        }
    }

    private void limpiarTabla() {
        DefaultTableModel tb = (DefaultTableModel) tablaPaquetes.getModel();
        int a = tablaPaquetes.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }

    }

    private void mostrarTablas() {
        try {
            ManejoTabla.mostrarTablas(tabalaDestino, TODOS_LOS_DESTINO, null);
        } catch (ClassNotFoundException ex) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel asignarPuntosControl;
    private javax.swing.JButton btnAsignar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnCrearCliente;
    private javax.swing.JCheckBox chkPriorizar;
    private javax.swing.JPanel contenedorAyuda;
    private javax.swing.JPanel contenedorInfo;
    private javax.swing.JPanel contenedorInfo1;
    private javax.swing.JPanel contenedorTabla;
    private javax.swing.JLabel errorAsignar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabalaDestino;
    private javax.swing.JTable tablaPaquetes;
    private javax.swing.JTextField txtBuscarDestino;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtTarifaDestino;
    private javax.swing.JTextField txtTarifaPorLibra;
    private javax.swing.JTextField txtTarifaPriorizacion;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables
}
